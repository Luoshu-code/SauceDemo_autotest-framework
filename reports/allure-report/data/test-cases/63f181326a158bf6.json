{
  "uid" : "63f181326a158bf6",
  "name" : "firstname:【】 lastname:【】 postalcode:【】",
  "fullName" : "test_cases.test_checkout_one#test_checkout_one_enterinfo",
  "historyId" : "8b3d4d8a96a3ddac261a203580fbc051",
  "time" : {
    "start" : 1744203882208,
    "stop" : 1744203882526,
    "duration" : 318
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'https://www....step-one.html' == 'https://www....step-two.html'\n  - https://www.saucedemo.com/checkout-step-two.html\n  ?                                         --\n  + https://www.saucedemo.com/checkout-step-one.html\n  ?                                          ++",
  "statusTrace" : "setup_checkout_one = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1cdf103e311036da727751ed568298b3\")>\nfirstname = '', lastname = '', postalcode = ''\n\n    @allure.feature('Checkout-step one: 填写结账信息')\n    @allure.story(\"测试填写结账信息缺失，能否进入结账下一步\")\n    @pytest.mark.parametrize(\"firstname, lastname, postalcode\",[\n        (\"sang\", \"zhang\" ,\"666666\"),\n        (\"san\", \"\", \"666666\"),\n        (\"\", \"zhang\", \"666666\"),\n        (\"san\", \"zhang\", \"\"),\n        (\"\", \"\", \"\")\n    ])\n    def test_checkout_one_enterinfo(setup_checkout_one,firstname, lastname, postalcode):\n    \n        wdriver = setup_checkout_one\n        allure.dynamic.title(f\"firstname:【{firstname}】 lastname:【{lastname}】 postalcode:【{postalcode}】\")  # 动态设置标题\n    \n        screenshot_util = Screenshot(wdriver)\n        checkout_one_page = CheckoutOnePage(wdriver)\n    \n        try:\n            checkout_one_page.enter_firstname(firstname)\n            checkout_one_page.enter_lastname(lastname)\n            checkout_one_page.enter_postalcode(postalcode)\n            checkout_one_page.click_continue_checkout_one()\n>           assert  wdriver.current_url == URL_OVERVIEW\nE           AssertionError: assert 'https://www....step-one.html' == 'https://www....step-two.html'\nE             - https://www.saucedemo.com/checkout-step-two.html\nE             ?                                         --\nE             + https://www.saucedemo.com/checkout-step-one.html\nE             ?                                          ++\n\ntest_cases\\test_checkout_one.py:83: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_checkout_one",
    "time" : {
      "start" : 1744203878536,
      "stop" : 1744203882207,
      "duration" : 3671
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'https://www....step-one.html' == 'https://www....step-two.html'\n  - https://www.saucedemo.com/checkout-step-two.html\n  ?                                         --\n  + https://www.saucedemo.com/checkout-step-one.html\n  ?                                          ++",
    "statusTrace" : "setup_checkout_one = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1cdf103e311036da727751ed568298b3\")>\nfirstname = '', lastname = '', postalcode = ''\n\n    @allure.feature('Checkout-step one: 填写结账信息')\n    @allure.story(\"测试填写结账信息缺失，能否进入结账下一步\")\n    @pytest.mark.parametrize(\"firstname, lastname, postalcode\",[\n        (\"sang\", \"zhang\" ,\"666666\"),\n        (\"san\", \"\", \"666666\"),\n        (\"\", \"zhang\", \"666666\"),\n        (\"san\", \"zhang\", \"\"),\n        (\"\", \"\", \"\")\n    ])\n    def test_checkout_one_enterinfo(setup_checkout_one,firstname, lastname, postalcode):\n    \n        wdriver = setup_checkout_one\n        allure.dynamic.title(f\"firstname:【{firstname}】 lastname:【{lastname}】 postalcode:【{postalcode}】\")  # 动态设置标题\n    \n        screenshot_util = Screenshot(wdriver)\n        checkout_one_page = CheckoutOnePage(wdriver)\n    \n        try:\n            checkout_one_page.enter_firstname(firstname)\n            checkout_one_page.enter_lastname(lastname)\n            checkout_one_page.enter_postalcode(postalcode)\n            checkout_one_page.click_continue_checkout_one()\n>           assert  wdriver.current_url == URL_OVERVIEW\nE           AssertionError: assert 'https://www....step-one.html' == 'https://www....step-two.html'\nE             - https://www.saucedemo.com/checkout-step-two.html\nE             ?                                         --\nE             + https://www.saucedemo.com/checkout-step-one.html\nE             ?                                          ++\n\ntest_cases\\test_checkout_one.py:83: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "26384b2f530fda24",
      "name" : "log",
      "source" : "26384b2f530fda24.txt",
      "type" : "text/plain",
      "size" : 163
    }, {
      "uid" : "e8e73c994fc88ffe",
      "name" : "stdout",
      "source" : "e8e73c994fc88ffe.txt",
      "type" : "text/plain",
      "size" : 84
    }, {
      "uid" : "b894a948a237dc3e",
      "name" : "stderr",
      "source" : "b894a948a237dc3e.txt",
      "type" : "text/plain",
      "size" : 1078
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "setup_checkout_one::0",
    "time" : {
      "start" : 1744203882532,
      "stop" : 1744203884698,
      "duration" : 2166
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Checkout-step one: 填写结账信息"
  }, {
    "name" : "story",
    "value" : "测试填写结账信息缺失，能否进入结账下一步"
  }, {
    "name" : "parentSuite",
    "value" : "test_cases"
  }, {
    "name" : "suite",
    "value" : "test_checkout_one"
  }, {
    "name" : "host",
    "value" : "LAPTOP-FTAI4QMK"
  }, {
    "name" : "thread",
    "value" : "63320-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cases.test_checkout_one"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "firstname",
    "value" : "''"
  }, {
    "name" : "lastname",
    "value" : "''"
  }, {
    "name" : "postalcode",
    "value" : "''"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "63f181326a158bf6.json",
  "parameterValues" : [ "''", "''", "''" ]
}